# Generated by Django 5.2.7 on 2025-10-20 10:47

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('projects', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Estimate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_name', models.CharField(max_length=200)),
                ('project_description', models.TextField(blank=True)),
                ('total_area', models.DecimalField(decimal_places=2, help_text='Total area in square meters', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('base_cost_per_sqm', models.DecimalField(decimal_places=2, max_digits=10)),
                ('location_multiplier', models.DecimalField(decimal_places=2, default=1.0, max_digits=5)),
                ('adjusted_cost_per_sqm', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_estimated_cost', models.DecimalField(decimal_places=2, max_digits=15)),
                ('contingency_percentage', models.DecimalField(decimal_places=2, default=10.0, help_text='Contingency percentage (default 10%)', max_digits=5)),
                ('contingency_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending', 'Pending Review'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='draft', max_length=20)),
                ('is_public', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='estimates', to='projects.location')),
                ('project_template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='projects.projecttemplate')),
                ('project_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='estimates', to='projects.projecttype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='estimates', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'estimates',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EstimateItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('material', 'Material'), ('labor', 'Labor'), ('equipment', 'Equipment'), ('overhead', 'Overhead'), ('other', 'Other')], max_length=20)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('unit', models.CharField(max_length=20)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=15)),
                ('notes', models.TextField(blank=True)),
                ('estimate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='estimates.estimate')),
            ],
            options={
                'db_table': 'estimate_items',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='EstimateShare',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shared_with_email', models.EmailField(max_length=254)),
                ('shared_with_name', models.CharField(blank=True, max_length=200)),
                ('access_token', models.CharField(max_length=100, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('expires_at', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('estimate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shares', to='estimates.estimate')),
            ],
            options={
                'db_table': 'estimate_shares',
            },
        ),
        migrations.CreateModel(
            name='EstimateRevision',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('revision_number', models.PositiveIntegerField()),
                ('changes_summary', models.TextField()),
                ('previous_total_cost', models.DecimalField(decimal_places=2, max_digits=15)),
                ('new_total_cost', models.DecimalField(decimal_places=2, max_digits=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('estimate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='revisions', to='estimates.estimate')),
            ],
            options={
                'db_table': 'estimate_revisions',
                'ordering': ['-created_at'],
                'unique_together': {('estimate', 'revision_number')},
            },
        ),
    ]
