{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || '',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Token ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle common errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // Unauthorized - redirect to login\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\nexport default api;\n\n// API endpoints\nexport const authAPI = {\n  login: credentials => api.post('/auth/login/', credentials),\n  register: userData => api.post('/auth/register/', userData),\n  sendOTP: phoneNumber => api.post('/auth/send-otp/', phoneNumber),\n  verifyOTP: data => api.post('/auth/verify-otp/', data),\n  logout: () => api.post('/auth/logout/'),\n  getProfile: () => api.get('/auth/profile/'),\n  updateProfile: data => api.patch('/auth/profile/', data),\n  getDashboard: () => api.get('/auth/dashboard/')\n};\nexport const projectsAPI = {\n  getProjectTypes: params => api.get('/api/projects/types/', {\n    params\n  }),\n  getProjectTemplates: params => api.get('/api/projects/templates/', {\n    params\n  }),\n  getLocations: params => api.get('/api/projects/locations/', {\n    params\n  }),\n  getMaterials: params => api.get('/api/projects/materials/', {\n    params\n  }),\n  getMaterialPrices: params => api.get('/api/projects/materials/prices/', {\n    params\n  }),\n  getLaborPrices: params => api.get('/api/projects/labor/prices/', {\n    params\n  }),\n  getProjectCostBreakdown: (projectTypeId, params) => api.get(`/api/projects/types/${projectTypeId}/breakdown/`, {\n    params\n  }),\n  getFilterOptions: () => api.get('/projects/filter-options/'),\n  searchProjects: params => api.get('/projects/search/', {\n    params\n  }),\n  getLocationDetails: locationId => api.get(`/projects/locations/${locationId}/`)\n};\nexport const estimatesAPI = {\n  getEstimates: params => api.get('/estimates/', {\n    params\n  }),\n  getEstimate: id => api.get(`/estimates/${id}/`),\n  createEstimate: data => api.post('/estimates/', data),\n  updateEstimate: (id, data) => api.patch(`/estimates/${id}/`, data),\n  deleteEstimate: id => api.delete(`/estimates/${id}/`),\n  calculateCost: data => api.post('/api/estimates/calculate/', data),\n  saveEstimate: data => api.post('/estimates/save/', data),\n  uploadEstimate: file => {\n    const formData = new FormData();\n    formData.append('file', file);\n    return api.post('/api/estimates/upload/', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  },\n  duplicateEstimate: id => api.post(`/estimates/${id}/duplicate/`),\n  shareEstimate: (id, data) => api.post(`/estimates/${id}/share/`, data),\n  getSharedEstimate: token => api.get(`/estimates/shared/${token}/`),\n  getStatistics: () => api.get('/estimates/statistics/')\n};\nexport const subscriptionsAPI = {\n  getPlans: () => api.get('/subscriptions/plans/'),\n  getCurrentSubscription: () => api.get('/subscriptions/current/'),\n  createSubscription: data => api.post('/subscriptions/', data),\n  upgradeSubscription: data => api.post('/subscriptions/upgrade/', data),\n  cancelSubscription: () => api.post('/subscriptions/cancel/'),\n  getUsage: () => api.get('/subscriptions/usage/'),\n  recordUsage: data => api.post('/subscriptions/record-usage/', data),\n  getPaymentHistory: () => api.get('/subscriptions/payments/')\n};\nexport const reportsAPI = {\n  getReports: params => api.get('/reports/', {\n    params\n  }),\n  getReport: id => api.get(`/reports/${id}/`),\n  generateReport: data => api.post('/reports/generate/', data),\n  downloadReport: id => api.get(`/reports/${id}/download/`, {\n    responseType: 'blob'\n  }),\n  shareReport: (id, data) => api.post(`/reports/${id}/share/`, data),\n  getSharedReport: token => api.get(`/reports/shared/${token}/`),\n  getTemplates: () => api.get('/reports/templates/')\n};","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","login","credentials","post","register","userData","sendOTP","phoneNumber","verifyOTP","data","logout","getProfile","get","updateProfile","patch","getDashboard","projectsAPI","getProjectTypes","params","getProjectTemplates","getLocations","getMaterials","getMaterialPrices","getLaborPrices","getProjectCostBreakdown","projectTypeId","getFilterOptions","searchProjects","getLocationDetails","locationId","estimatesAPI","getEstimates","getEstimate","id","createEstimate","updateEstimate","deleteEstimate","delete","calculateCost","saveEstimate","uploadEstimate","file","formData","FormData","append","duplicateEstimate","shareEstimate","getSharedEstimate","getStatistics","subscriptionsAPI","getPlans","getCurrentSubscription","createSubscription","upgradeSubscription","cancelSubscription","getUsage","recordUsage","getPaymentHistory","reportsAPI","getReports","getReport","generateReport","downloadReport","responseType","shareReport","getSharedReport","getTemplates"],"sources":["/home/subchief/JengAEA/frontend/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || '',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Token ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor to handle common errors\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      // Unauthorized - redirect to login\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport default api;\n\n// API endpoints\nexport const authAPI = {\n  login: (credentials) => api.post('/auth/login/', credentials),\n  register: (userData) => api.post('/auth/register/', userData),\n  sendOTP: (phoneNumber) => api.post('/auth/send-otp/', phoneNumber),\n  verifyOTP: (data) => api.post('/auth/verify-otp/', data),\n  logout: () => api.post('/auth/logout/'),\n  getProfile: () => api.get('/auth/profile/'),\n  updateProfile: (data) => api.patch('/auth/profile/', data),\n  getDashboard: () => api.get('/auth/dashboard/'),\n};\n\nexport const projectsAPI = {\n  getProjectTypes: (params) => api.get('/api/projects/types/', { params }),\n  getProjectTemplates: (params) => api.get('/api/projects/templates/', { params }),\n  getLocations: (params) => api.get('/api/projects/locations/', { params }),\n  getMaterials: (params) => api.get('/api/projects/materials/', { params }),\n  getMaterialPrices: (params) => api.get('/api/projects/materials/prices/', { params }),\n  getLaborPrices: (params) => api.get('/api/projects/labor/prices/', { params }),\n  getProjectCostBreakdown: (projectTypeId, params) => \n    api.get(`/api/projects/types/${projectTypeId}/breakdown/`, { params }),\n  getFilterOptions: () => api.get('/projects/filter-options/'),\n  searchProjects: (params) => api.get('/projects/search/', { params }),\n  getLocationDetails: (locationId) => api.get(`/projects/locations/${locationId}/`),\n};\n\nexport const estimatesAPI = {\n  getEstimates: (params) => api.get('/estimates/', { params }),\n  getEstimate: (id) => api.get(`/estimates/${id}/`),\n  createEstimate: (data) => api.post('/estimates/', data),\n  updateEstimate: (id, data) => api.patch(`/estimates/${id}/`, data),\n  deleteEstimate: (id) => api.delete(`/estimates/${id}/`),\n  calculateCost: (data) => api.post('/api/estimates/calculate/', data),\n  saveEstimate: (data) => api.post('/estimates/save/', data),\n  uploadEstimate: (file) => {\n    const formData = new FormData();\n    formData.append('file', file);\n    return api.post('/api/estimates/upload/', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  },\n  duplicateEstimate: (id) => api.post(`/estimates/${id}/duplicate/`),\n  shareEstimate: (id, data) => api.post(`/estimates/${id}/share/`, data),\n  getSharedEstimate: (token) => api.get(`/estimates/shared/${token}/`),\n  getStatistics: () => api.get('/estimates/statistics/'),\n};\n\nexport const subscriptionsAPI = {\n  getPlans: () => api.get('/subscriptions/plans/'),\n  getCurrentSubscription: () => api.get('/subscriptions/current/'),\n  createSubscription: (data) => api.post('/subscriptions/', data),\n  upgradeSubscription: (data) => api.post('/subscriptions/upgrade/', data),\n  cancelSubscription: () => api.post('/subscriptions/cancel/'),\n  getUsage: () => api.get('/subscriptions/usage/'),\n  recordUsage: (data) => api.post('/subscriptions/record-usage/', data),\n  getPaymentHistory: () => api.get('/subscriptions/payments/'),\n};\n\nexport const reportsAPI = {\n  getReports: (params) => api.get('/reports/', { params }),\n  getReport: (id) => api.get(`/reports/${id}/`),\n  generateReport: (data) => api.post('/reports/generate/', data),\n  downloadReport: (id) => api.get(`/reports/${id}/download/`, { responseType: 'blob' }),\n  shareReport: (id, data) => api.post(`/reports/${id}/share/`, data),\n  getSharedReport: (token) => api.get(`/reports/shared/${token}/`),\n  getTemplates: () => api.get('/reports/templates/'),\n};\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}