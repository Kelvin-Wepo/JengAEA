{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\cost2\\\\frontend\\\\src\\\\contexts\\\\SubscriptionContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport axios from 'axios';\nimport { useAuth } from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SubscriptionContext = /*#__PURE__*/createContext();\nconst initialState = {\n  currentSubscription: null,\n  subscriptionPlans: [],\n  usage: null,\n  isLoading: false\n};\nconst subscriptionReducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_LOADING':\n      return {\n        ...state,\n        isLoading: action.payload\n      };\n    case 'SET_SUBSCRIPTION':\n      return {\n        ...state,\n        currentSubscription: action.payload\n      };\n    case 'SET_PLANS':\n      return {\n        ...state,\n        subscriptionPlans: action.payload\n      };\n    case 'SET_USAGE':\n      return {\n        ...state,\n        usage: action.payload\n      };\n    case 'UPDATE_USAGE':\n      return {\n        ...state,\n        usage: {\n          ...state.usage,\n          estimates_used: state.usage.estimates_used + 1,\n          estimates_remaining: state.usage.estimates_remaining > 0 ? state.usage.estimates_remaining - 1 : 0\n        }\n      };\n    default:\n      return state;\n  }\n};\nexport const SubscriptionProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(subscriptionReducer, initialState);\n  const {\n    isAuthenticated\n  } = useAuth();\n\n  // Fetch subscription data when user is authenticated\n  useEffect(() => {\n    if (isAuthenticated) {\n      fetchSubscriptionData();\n      fetchSubscriptionPlans();\n      fetchUsageData();\n    }\n  }, [isAuthenticated]);\n  const fetchSubscriptionData = async () => {\n    dispatch({\n      type: 'SET_LOADING',\n      payload: true\n    });\n    try {\n      const response = await axios.get('/api/subscriptions/current/');\n      dispatch({\n        type: 'SET_SUBSCRIPTION',\n        payload: response.data\n      });\n    } catch (error) {\n      console.error('Error fetching subscription:', error);\n      dispatch({\n        type: 'SET_SUBSCRIPTION',\n        payload: null\n      });\n    } finally {\n      dispatch({\n        type: 'SET_LOADING',\n        payload: false\n      });\n    }\n  };\n  const fetchSubscriptionPlans = async () => {\n    try {\n      const response = await axios.get('/api/subscriptions/plans/');\n      dispatch({\n        type: 'SET_PLANS',\n        payload: response.data\n      });\n    } catch (error) {\n      console.error('Error fetching subscription plans:', error);\n    }\n  };\n  const fetchUsageData = async () => {\n    try {\n      const response = await axios.get('/api/subscriptions/usage/');\n      dispatch({\n        type: 'SET_USAGE',\n        payload: response.data.usage\n      });\n    } catch (error) {\n      console.error('Error fetching usage data:', error);\n    }\n  };\n  const subscribeToPlan = async (planId, paymentMethod, autoRenew = false) => {\n    try {\n      const response = await axios.post('/api/subscriptions/', {\n        plan_id: planId,\n        payment_method: paymentMethod,\n        auto_renew: autoRenew\n      });\n\n      // Refresh subscription data\n      await fetchSubscriptionData();\n      await fetchUsageData();\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Subscription failed';\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const upgradeSubscription = async (newPlanId, paymentMethod) => {\n    try {\n      const response = await axios.post('/api/subscriptions/upgrade/', {\n        new_plan_id: newPlanId,\n        payment_method: paymentMethod\n      });\n\n      // Refresh subscription data\n      await fetchSubscriptionData();\n      await fetchUsageData();\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Upgrade failed';\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const cancelSubscription = async () => {\n    try {\n      const response = await axios.post('/api/subscriptions/cancel/');\n\n      // Refresh subscription data\n      await fetchSubscriptionData();\n      await fetchUsageData();\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const message = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || 'Cancellation failed';\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const recordUsage = async (action, resourceType, resourceId = '') => {\n    try {\n      const response = await axios.post('/api/subscriptions/record-usage/', {\n        action,\n        resource_type: resourceType,\n        resource_id: resourceId\n      });\n\n      // Update local usage state\n      if (action === 'estimate_created') {\n        dispatch({\n          type: 'UPDATE_USAGE'\n        });\n      }\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      const message = ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.error) || 'Failed to record usage';\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const checkQuota = () => {\n    if (!state.usage) return true;\n\n    // If unlimited (estimates_limit is null), return true\n    if (state.usage.estimates_limit === null) return true;\n\n    // Check if user has remaining quota\n    return state.usage.estimates_remaining > 0;\n  };\n  const getQuotaStatus = () => {\n    if (!state.usage) return {\n      hasQuota: true,\n      percentage: 0\n    };\n    if (state.usage.estimates_limit === null) {\n      return {\n        hasQuota: true,\n        percentage: 0,\n        isUnlimited: true\n      };\n    }\n    const percentage = state.usage.estimates_used / state.usage.estimates_limit * 100;\n    const hasQuota = state.usage.estimates_remaining > 0;\n    return {\n      hasQuota,\n      percentage,\n      isUnlimited: false\n    };\n  };\n  const value = {\n    ...state,\n    subscribeToPlan,\n    upgradeSubscription,\n    cancelSubscription,\n    recordUsage,\n    checkQuota,\n    getQuotaStatus,\n    refreshData: () => {\n      fetchSubscriptionData();\n      fetchUsageData();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(SubscriptionContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 5\n  }, this);\n};\n_s(SubscriptionProvider, \"0ubePo8JPl0+mzcUJoiBpiDGTUo=\", false, function () {\n  return [useAuth];\n});\n_c = SubscriptionProvider;\nexport const useSubscription = () => {\n  _s2();\n  const context = useContext(SubscriptionContext);\n  if (!context) {\n    throw new Error('useSubscription must be used within a SubscriptionProvider');\n  }\n  return context;\n};\n_s2(useSubscription, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"SubscriptionProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","axios","useAuth","jsxDEV","_jsxDEV","SubscriptionContext","initialState","currentSubscription","subscriptionPlans","usage","isLoading","subscriptionReducer","state","action","type","payload","estimates_used","estimates_remaining","SubscriptionProvider","children","_s","dispatch","isAuthenticated","fetchSubscriptionData","fetchSubscriptionPlans","fetchUsageData","response","get","data","error","console","subscribeToPlan","planId","paymentMethod","autoRenew","post","plan_id","payment_method","auto_renew","success","_error$response","_error$response$data","message","upgradeSubscription","newPlanId","new_plan_id","_error$response2","_error$response2$data","cancelSubscription","_error$response3","_error$response3$data","recordUsage","resourceType","resourceId","resource_type","resource_id","_error$response4","_error$response4$data","checkQuota","estimates_limit","getQuotaStatus","hasQuota","percentage","isUnlimited","value","refreshData","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useSubscription","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/cost2/frontend/src/contexts/SubscriptionContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useAuth } from './AuthContext';\r\n\r\nconst SubscriptionContext = createContext();\r\n\r\nconst initialState = {\r\n  currentSubscription: null,\r\n  subscriptionPlans: [],\r\n  usage: null,\r\n  isLoading: false,\r\n};\r\n\r\nconst subscriptionReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'SET_LOADING':\r\n      return {\r\n        ...state,\r\n        isLoading: action.payload,\r\n      };\r\n    case 'SET_SUBSCRIPTION':\r\n      return {\r\n        ...state,\r\n        currentSubscription: action.payload,\r\n      };\r\n    case 'SET_PLANS':\r\n      return {\r\n        ...state,\r\n        subscriptionPlans: action.payload,\r\n      };\r\n    case 'SET_USAGE':\r\n      return {\r\n        ...state,\r\n        usage: action.payload,\r\n      };\r\n    case 'UPDATE_USAGE':\r\n      return {\r\n        ...state,\r\n        usage: {\r\n          ...state.usage,\r\n          estimates_used: state.usage.estimates_used + 1,\r\n          estimates_remaining: state.usage.estimates_remaining > 0 \r\n            ? state.usage.estimates_remaining - 1 \r\n            : 0,\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const SubscriptionProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(subscriptionReducer, initialState);\r\n  const { isAuthenticated } = useAuth();\r\n\r\n  // Fetch subscription data when user is authenticated\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      fetchSubscriptionData();\r\n      fetchSubscriptionPlans();\r\n      fetchUsageData();\r\n    }\r\n  }, [isAuthenticated]);\r\n\r\n  const fetchSubscriptionData = async () => {\r\n    dispatch({ type: 'SET_LOADING', payload: true });\r\n    try {\r\n      const response = await axios.get('/api/subscriptions/current/');\r\n      dispatch({ type: 'SET_SUBSCRIPTION', payload: response.data });\r\n    } catch (error) {\r\n      console.error('Error fetching subscription:', error);\r\n      dispatch({ type: 'SET_SUBSCRIPTION', payload: null });\r\n    } finally {\r\n      dispatch({ type: 'SET_LOADING', payload: false });\r\n    }\r\n  };\r\n\r\n  const fetchSubscriptionPlans = async () => {\r\n    try {\r\n      const response = await axios.get('/api/subscriptions/plans/');\r\n      dispatch({ type: 'SET_PLANS', payload: response.data });\r\n    } catch (error) {\r\n      console.error('Error fetching subscription plans:', error);\r\n    }\r\n  };\r\n\r\n  const fetchUsageData = async () => {\r\n    try {\r\n      const response = await axios.get('/api/subscriptions/usage/');\r\n      dispatch({ type: 'SET_USAGE', payload: response.data.usage });\r\n    } catch (error) {\r\n      console.error('Error fetching usage data:', error);\r\n    }\r\n  };\r\n\r\n  const subscribeToPlan = async (planId, paymentMethod, autoRenew = false) => {\r\n    try {\r\n      const response = await axios.post('/api/subscriptions/', {\r\n        plan_id: planId,\r\n        payment_method: paymentMethod,\r\n        auto_renew: autoRenew,\r\n      });\r\n      \r\n      // Refresh subscription data\r\n      await fetchSubscriptionData();\r\n      await fetchUsageData();\r\n      \r\n      return { success: true, data: response.data };\r\n    } catch (error) {\r\n      const message = error.response?.data?.error || 'Subscription failed';\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  const upgradeSubscription = async (newPlanId, paymentMethod) => {\r\n    try {\r\n      const response = await axios.post('/api/subscriptions/upgrade/', {\r\n        new_plan_id: newPlanId,\r\n        payment_method: paymentMethod,\r\n      });\r\n      \r\n      // Refresh subscription data\r\n      await fetchSubscriptionData();\r\n      await fetchUsageData();\r\n      \r\n      return { success: true, data: response.data };\r\n    } catch (error) {\r\n      const message = error.response?.data?.error || 'Upgrade failed';\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  const cancelSubscription = async () => {\r\n    try {\r\n      const response = await axios.post('/api/subscriptions/cancel/');\r\n      \r\n      // Refresh subscription data\r\n      await fetchSubscriptionData();\r\n      await fetchUsageData();\r\n      \r\n      return { success: true, data: response.data };\r\n    } catch (error) {\r\n      const message = error.response?.data?.error || 'Cancellation failed';\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  const recordUsage = async (action, resourceType, resourceId = '') => {\r\n    try {\r\n      const response = await axios.post('/api/subscriptions/record-usage/', {\r\n        action,\r\n        resource_type: resourceType,\r\n        resource_id: resourceId,\r\n      });\r\n      \r\n      // Update local usage state\r\n      if (action === 'estimate_created') {\r\n        dispatch({ type: 'UPDATE_USAGE' });\r\n      }\r\n      \r\n      return { success: true, data: response.data };\r\n    } catch (error) {\r\n      const message = error.response?.data?.error || 'Failed to record usage';\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  const checkQuota = () => {\r\n    if (!state.usage) return true;\r\n    \r\n    // If unlimited (estimates_limit is null), return true\r\n    if (state.usage.estimates_limit === null) return true;\r\n    \r\n    // Check if user has remaining quota\r\n    return state.usage.estimates_remaining > 0;\r\n  };\r\n\r\n  const getQuotaStatus = () => {\r\n    if (!state.usage) return { hasQuota: true, percentage: 0 };\r\n    \r\n    if (state.usage.estimates_limit === null) {\r\n      return { hasQuota: true, percentage: 0, isUnlimited: true };\r\n    }\r\n    \r\n    const percentage = (state.usage.estimates_used / state.usage.estimates_limit) * 100;\r\n    const hasQuota = state.usage.estimates_remaining > 0;\r\n    \r\n    return { hasQuota, percentage, isUnlimited: false };\r\n  };\r\n\r\n  const value = {\r\n    ...state,\r\n    subscribeToPlan,\r\n    upgradeSubscription,\r\n    cancelSubscription,\r\n    recordUsage,\r\n    checkQuota,\r\n    getQuotaStatus,\r\n    refreshData: () => {\r\n      fetchSubscriptionData();\r\n      fetchUsageData();\r\n    },\r\n  };\r\n\r\n  return (\r\n    <SubscriptionContext.Provider value={value}>\r\n      {children}\r\n    </SubscriptionContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useSubscription = () => {\r\n  const context = useContext(SubscriptionContext);\r\n  if (!context) {\r\n    throw new Error('useSubscription must be used within a SubscriptionProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}