{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8000',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add request interceptor to include auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Token ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Add response interceptor to handle common errors\napi.interceptors.response.use(response => response, error => {\n  if (error.response) {\n    // Handle specific error codes\n    switch (error.response.status) {\n      case 401:\n        // Handle unauthorized\n        localStorage.removeItem('token');\n        window.location.href = '/login';\n        break;\n      case 403:\n        // Handle forbidden\n        break;\n      case 404:\n        // Handle not found\n        break;\n      case 500:\n        // Handle server error\n        break;\n      default:\n        break;\n    }\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","status","removeItem","window","location","href"],"sources":["/home/subchief/JengAEA/frontend/src/utils/axiosConfig.js"],"sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8000',\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\n// Add request interceptor to include auth token\napi.interceptors.request.use(\n    (config) => {\n        const token = localStorage.getItem('token');\n        if (token) {\n            config.headers.Authorization = `Token ${token}`;\n        }\n        return config;\n    },\n    (error) => {\n        return Promise.reject(error);\n    }\n);\n\n// Add response interceptor to handle common errors\napi.interceptors.response.use(\n    (response) => response,\n    (error) => {\n        if (error.response) {\n            // Handle specific error codes\n            switch (error.response.status) {\n                case 401:\n                    // Handle unauthorized\n                    localStorage.removeItem('token');\n                    window.location.href = '/login';\n                    break;\n                case 403:\n                    // Handle forbidden\n                    break;\n                case 404:\n                    // Handle not found\n                    break;\n                case 500:\n                    // Handle server error\n                    break;\n                default:\n                    break;\n            }\n        }\n        return Promise.reject(error);\n    }\n);\n\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACrBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;EACjEC,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;;AAEF;AACAN,GAAG,CAACO,YAAY,CAACC,OAAO,CAACC,GAAG,CACvBC,MAAM,IAAK;EACR,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACPD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,SAASH,KAAK,EAAE;EACnD;EACA,OAAOD,MAAM;AACjB,CAAC,EACAK,KAAK,IAAK;EACP,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;;AAED;AACAf,GAAG,CAACO,YAAY,CAACW,QAAQ,CAACT,GAAG,CACxBS,QAAQ,IAAKA,QAAQ,EACrBH,KAAK,IAAK;EACP,IAAIA,KAAK,CAACG,QAAQ,EAAE;IAChB;IACA,QAAQH,KAAK,CAACG,QAAQ,CAACC,MAAM;MACzB,KAAK,GAAG;QACJ;QACAP,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC;QAChCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;QAC/B;MACJ,KAAK,GAAG;QACJ;QACA;MACJ,KAAK,GAAG;QACJ;QACA;MACJ,KAAK,GAAG;QACJ;QACA;MACJ;QACI;IACR;EACJ;EACA,OAAOP,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;AAED,eAAef,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}